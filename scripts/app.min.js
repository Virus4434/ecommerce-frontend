document.addEventListener('DOMContentLoaded', () => {
    // Mobile Menu
    const hamburger = document.querySelector('.hamburger');
    const navMenu = document.querySelector('.nav-menu');

    hamburger?.addEventListener('click', () => {
        navMenu?.classList.toggle('active');
    });

    // Product Fetching
    const productGrid = document.getElementById('productGrid');
    const loadingSpinner = document.querySelector('.loading-spinner');
    const errorMessage = document.querySelector('.error-message');

    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    const cartBadge = document.querySelector('.notification-badge');

    function showLoading() {
        if (loadingSpinner) loadingSpinner.style.display = 'block';
        if (productGrid) productGrid.innerHTML = '';
        if (errorMessage) errorMessage.style.display = 'none';
    }

    function hideLoading() {
        if (loadingSpinner) loadingSpinner.style.display = 'none';
    }

    function showError(msg) {
        if (errorMessage) {
            errorMessage.textContent = msg;
            errorMessage.style.display = 'block';
        }
    }

    function renderProducts(products) {
        if (!productGrid) return;
        productGrid.innerHTML = products.map(product => `
            <div class="product-card" data-id="${product.id}">
                <img src="${product.image}" alt="${product.title}" loading="lazy">
                <h3>${product.title.substring(0, 20)}${product.title.length > 20 ? '...' : ''}</h3>
                <p class="price">$${product.price.toFixed(2)}</p>
                <select class="variation-select" id="sizeSelect-${product.id}">
                    ${product.category && product.category.toLowerCase().includes('clothing') ? `
                        <option value="N/A">Select Size</option>
                        <option value="S">S</option>
                        <option value="M">M</option>
                        <option value="L">L</option>
                    ` : '<option value="N/A">N/A</option>'}
                </select>
                <div class="quantity-selector">
                    <button class="qty-btn" onclick="adjustQuantity(${product.id}, -1)">−</button>
                    <input type="number" id="quantity-${product.id}" value="1" min="1" max="10">
                    <button class="qty-btn" onclick="adjustQuantity(${product.id}, 1)">+</button>
                </div>
                <button class="add-to-cart-btn" onclick="addToCart(${product.id}, event)">Add to Cart</button>
            </div>
        `).join('');

        // Add click event to product cards for navigation
        document.querySelectorAll('.product-card').forEach(card => {
            card.addEventListener('click', (e) => {
                if (e.target.tagName === 'BUTTON' || e.target.tagName === 'INPUT' || e.target.tagName === 'SELECT') return;
                const productId = card.getAttribute('data-id');
                window.location.href = `product.html?id=${productId}`;
            });
        });
    }

    // Initial Product Load
    if (localStorage.getItem('cachedProducts')) {
        renderProducts(JSON.parse(localStorage.getItem('cachedProducts')));
        hideLoading();
    } else {
        showLoading();
        fetch('https://fakestoreapi.com/products')
            .then(response => {
                if (!response.ok) throw new Error('Network error');
                return response.json();
            })
            .then(products => {
                localStorage.setItem('cachedProducts', JSON.stringify(products));
                renderProducts(products);
                hideLoading();
            })
            .catch(error => {
                hideLoading();
                showError('Failed to load products. Please refresh.');
                console.error(error);
            });
    }

    // Cart System
    function updateCartCount() {
        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        if (cartBadge) {
            cartBadge.textContent = cart.reduce((sum, item) => sum + item.quantity, 0);
        }
        localStorage.setItem('cart', JSON.stringify(cart));
    }

    function getProductById(id) {
        const cachedProducts = JSON.parse(localStorage.getItem('cachedProducts')) || [];
        return cachedProducts.find(p => p.id == id);
    }

    window.addToCart = function(productId, event) {
        event.stopPropagation();
        const product = getProductById(productId);
        const selectedSize = document.getElementById(`sizeSelect-${productId}`).value || 'N/A';
        const quantity = parseInt(document.getElementById(`quantity-${productId}`).value || 1);

        if (product) {
            const cartItem = {
                ...product,
                size: selectedSize,
                quantity: quantity,
                total: (product.price * quantity).toFixed(2)
            };

            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            const existingCartItem = cart.find(item => item.id == productId && item.size === selectedSize);

            if (existingCartItem) {
                existingCartItem.quantity += quantity;
                existingCartItem.total = (existingCartItem.price * existingCartItem.quantity).toFixed(2);
            } else {
                cart.push(cartItem);
            }

            localStorage.setItem('cart', JSON.stringify(cart));
            updateCartCount();
            showCartFeedback();
        }
    };

    function adjustQuantity(productId, change) {
        const quantityInput = document.getElementById(`quantity-${productId}`);
        if (!quantityInput) return;

        let newVal = parseInt(quantityInput.value) + change;
        newVal = Math.max(1, Math.min(10, newVal));
        quantityInput.value = newVal;
    }

    function showCartFeedback() {
        const feedback = document.createElement('div');
        feedback.className = 'cart-feedback';
        feedback.textContent = 'Item added to cart! ✓';
        document.body.appendChild(feedback);

        setTimeout(() => {
            feedback.remove();
        }, 2000);
    }

    // Initialize Cart
    updateCartCount();
});