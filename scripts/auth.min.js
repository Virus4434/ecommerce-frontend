// Import Firebase SDK with module syntax
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-app.js";
import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-auth.js";

// Your web app's Firebase configuration
const firebaseConfig = {
    apiKey: "AIzaSyBYp6ozTVWSoOoqdDuYebNXY1sMs_rG_a0",
    authDomain: "ecommerce-frontend-a300c.firebaseapp.com",
    projectId: "ecommerce-frontend-a300c",
    storageBucket: "ecommerce-frontend-a300c.appspot.com",
    messagingSenderId: "784393163041",
    appId: "1:784393163041:web:d15e542d0f6b34d2c4ee60",
    measurementId: "G-3ZJ0NN1T4T"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const auth = getAuth(app);

// Function to update navbar based on auth state
function updateNavbar(user) {
    const authLink = document.getElementById('authLink');
    const logoutBtn = document.getElementById('logoutBtn');

    if (authLink && logoutBtn) {
        if (user) {
            authLink.style.display = 'none';
            logoutBtn.style.display = 'inline-block';
        } else {
            authLink.style.display = 'inline-block';
            logoutBtn.style.display = 'none';
        }
    } else {
        console.error('One or more navbar elements not found');
    }
}

// Ensure navbar updates on page load and auth state change
document.addEventListener('DOMContentLoaded', () => {
    onAuthStateChanged(auth, (user) => {
        updateNavbar(user);
        console.log('Auth state changed, user:', user ? user.email : 'null');
    });

    // Password visibility toggle
    window.togglePassword = function (fieldId) {
        const passwordField = document.getElementById(fieldId);
        if (passwordField) {
            const toggleBtn = passwordField.nextElementSibling;
            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
        }
    };

    // Login form validation and Firebase login
    window.validateLogin = function (event) {
        event.preventDefault();
        const email = document.getElementById('loginEmail')?.value || '';
        const password = document.getElementById('loginPassword')?.value || '';
        const emailError = document.getElementById('loginEmailError');
        const passwordError = document.getElementById('loginPasswordError');
        const authMessage = document.getElementById('authMessage');

        if (!emailError || !passwordError || !authMessage) {
            console.error('Required form elements not found');
            return false;
        }

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
            emailError.textContent = 'Please enter a valid email address.';
            return false;
        } else {
            emailError.textContent = '';
        }

        if (password.length < 8) {
            passwordError.textContent = 'Password must be at least 8 characters.';
            return false;
        } else {
            passwordError.textContent = '';
        }

        signInWithEmailAndPassword(auth, email, password)
            .then((userCredential) => {
                authMessage.textContent = 'Login successful!';
                authMessage.style.color = 'green';
                updateNavbar(userCredential.user);
                setTimeout(() => {
                    window.location.href = 'index.html';
                }, 1000);
            })
            .catch((error) => {
                authMessage.textContent = error.message;
                authMessage.style.color = 'red';
            });

        return false;
    };

    // Signup form validation and Firebase signup
    window.validateSignup = function (event) {
        event.preventDefault();
        const fullName = document.getElementById('signupFullName')?.value || '';
        const email = document.getElementById('signupEmail')?.value || '';
        const password = document.getElementById('signupPassword')?.value || '';
        const confirmPassword = document.getElementById('signupConfirmPassword')?.value || '';

        const fullNameError = document.getElementById('signupFullNameError');
        const emailError = document.getElementById('signupEmailError');
        const passwordError = document.getElementById('signupPasswordError');
        const confirmPasswordError = document.getElementById('signupConfirmPasswordError');
        const authMessage = document.getElementById('authMessage');

        if (!fullNameError || !emailError || !passwordError || !confirmPasswordError || !authMessage) {
            console.error('Required form elements not found');
            return false;
        }

        if (fullName.length < 2) {
            fullNameError.textContent = 'Name must be at least 2 characters.';
            return false;
        } else {
            fullNameError.textContent = '';
        }

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
            emailError.textContent = 'Please enter a valid email address.';
            return false;
        } else {
            emailError.textContent = '';
        }

        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;
        if (!passwordRegex.test(password)) {
            passwordError.textContent = 'Password must be at least 8 characters with uppercase, lowercase, and a number.';
            return false;
        } else {
            passwordError.textContent = '';
        }

        if (password !== confirmPassword) {
            confirmPasswordError.textContent = 'Passwords do not match.';
            return false;
        } else {
            confirmPasswordError.textContent = '';
        }

        createUserWithEmailAndPassword(auth, email, password)
            .then((userCredential) => {
                authMessage.textContent = 'Signup successful! Redirecting to login...';
                authMessage.style.color = 'green';
                setTimeout(() => {
                    window.location.href = 'login.html';
                }, 1000);
            })
            .catch((error) => {
                authMessage.textContent = error.message;
                authMessage.style.color = 'red';
            });

        return false;
    };

    // Logout function
    window.logout = function () {
        signOut(auth)
            .then(() => {
                const authMessage = document.getElementById('authMessage');
                if (authMessage) {
                    authMessage.textContent = 'Logged out successfully!';
                    authMessage.style.color = 'green';
                    updateNavbar(null);
                    setTimeout(() => {
                        window.location.href = 'login.html';
                    }, 1000);
                }
            })
            .catch((error) => {
                console.error('Logout error:', error.message);
            });
    };
});
